using UnityEngine;

public class EnemyMove : MonoBehaviour
{
    public Transform[] waypoints; // Tableau des waypoints
    private int currentWaypointIndex = 0; // Indice du waypoint actuel
    public float speed = 3f; // Vitesse de d√©placement

    void Start()
    {
        // V√©rifie si des waypoints sont bien assign√©s
        if (waypoints == null || waypoints.Length == 0)
        {
            Debug.LogError("üö® Aucun waypoint d√©fini pour " + gameObject.name);
            enabled = false; // D√©sactive ce script pour √©viter les erreurs
        }
    }

    void Update()
    {
        if (waypoints == null || waypoints.Length == 0) return; // S√©curit√©

        // V√©rifie que l'index ne d√©passe pas la taille du tableau
        if (currentWaypointIndex >= waypoints.Length)
        {
            Debug.LogWarning("üö® " + gameObject.name + " essaie d'acc√©der √† un waypoint inexistant !");
            return;
        }

        // D√©placement vers le waypoint actuel
        transform.position = Vector3.MoveTowards(transform.position, waypoints[currentWaypointIndex].position, speed * Time.deltaTime);

        // Orientation de l'ennemi vers la prochaine destination
        Vector3 direction = (waypoints[currentWaypointIndex].position - transform.position).normalized;
        transform.forward = Vector3.Lerp(transform.forward, direction, Time.deltaTime * 5f);

        // V√©rifie si l'ennemi a atteint son waypoint
        if (Vector3.Distance(transform.position, waypoints[currentWaypointIndex].position) < 0.1f)
        {
            currentWaypointIndex++;

            // V√©rifie si l'ennemi a atteint la base
            if (currentWaypointIndex >= waypoints.Length)
            {
                ReachBase();
            }
        }
    }

    void ReachBase()
    {
        Debug.Log("üí• " + gameObject.name + " a atteint la base !");

        GameObject baseObject = GameObject.FindGameObjectWithTag("Base");

        if (baseObject != null)
        {
            BaseHealth baseHealth = baseObject.GetComponent<BaseHealth>();
            if (baseHealth != null)
            {
                baseHealth.TakeDamage(1); // Inflige des d√©g√¢ts √† la base
            }
            else
            {
                Debug.LogError("‚ùå BaseHealth non trouv√© sur la base !");
            }
        }
        else
        {
            Debug.LogError("‚ùå Aucun objet avec le tag 'Base' trouv√© !");
        }

        // D√©sactive ce script avant de d√©truire l'ennemi pour √©viter des erreurs
        enabled = false;

        Destroy(gameObject, 0.1f); // Supprime l'ennemi apr√®s un court d√©lai
    }
}
